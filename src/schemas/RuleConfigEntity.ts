/**
 * ATTENTION. This code was AUTO GENERATED by ts2typebox. While I don't know
 * your use case, there is a high chance that direct changes to this file get
 * lost. Consider making changes to the underlying Typescript code you use to
 * generate this file instead. The default file is called "types.ts", perhaps
 * have a look there! :]
 */

import { Type, type Static } from '@sinclair/typebox';

export type OutcomeResult = Static<typeof OutcomeResult>;
export const OutcomeResult = Type.Object({
  subRuleRef: Type.String(),
  reason: Type.String(),
});

export type Band = Static<typeof Band>;
export const Band = Type.Composite([
  OutcomeResult,
  Type.Object({
    lowerLimit: Type.Optional(Type.Number()),
    upperLimit: Type.Optional(Type.Number()),
  }),
]);

export type Case = Static<typeof Case>;
export const Case = Type.Composite([
  OutcomeResult,
  Type.Object({
    value: Type.String(),
  }),
]);

export type Timeframe = Static<typeof Timeframe>;
export const Timeframe = Type.Object({
  threshold: Type.Number(),
});

export type Config = Static<typeof Config>;
export const Config = Type.Object({
  parameters: Type.Optional(Type.Record(Type.Optional(Type.Union([Type.String(), Type.Number()])), Type.Optional(Type.Unknown()))),
  exitConditions: Type.Optional(Type.Array(OutcomeResult)),
  bands: Type.Optional(Type.Array(Band)),
  cases: Type.Optional(Type.Array(Case)),
  timeframes: Type.Optional(Type.Array(Timeframe)),
});

export type RuleConfig = Static<typeof RuleConfig>;
export const RuleConfig = Type.Object({
  id: Type.String(),
  cfg: Type.String(),
  config: Config,
  desc: Type.Optional(Type.String()),
});
